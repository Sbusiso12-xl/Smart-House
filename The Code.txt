#include <WiFi.h>
#include <WebServer.h>

// Replace with your Wi-Fi credentials
const char* ssid = "Galaxy A234377";
const char* password = "hbey9949";

// Pin assignments
#define LIGHT1_PIN 12
#define LIGHT2_PIN 13
#define LIGHT3_PIN 14
#define LIGHT4_PIN 27
#define PLUG1_PIN 25
#define PLUG2_PIN 33
#define PLUG3_PIN 32

WebServer server(80);

void handleRoot() {
  String html = R"rawliteral(
    <!DOCTYPE html>
    <html lang="en">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <title>Home Control System</title>
      <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
      <style>
        body {
          font-family: 'Roboto', sans-serif;
          background-color: #f0f2f5;
          margin: 0;
          padding: 20px;
        }
        .container {
          max-width: 800px;
          margin: 0 auto;
        }
        h1 {
          color: #1a237e;
          text-align: center;
          margin-bottom: 30px;
        }
        .grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
          gap: 20px;
        }
        .device {
          background: white;
          border-radius: 15px;
          padding: 20px;
          box-shadow: 0 2px 10px rgba(0,0,0,0.1);
          text-align: center;
        }
        h3 {
          color: #333;
          margin-top: 0;
        }
        .button-group {
          display: flex;
          justify-content: center;
          gap: 10px;
        }
        button {
          padding: 10px 20px;
          border: none;
          border-radius: 8px;
          font-size: 16px;
          cursor: pointer;
          transition: transform 0.1s;
        }
        button:active {
          transform: scale(0.95);
        }
        .on {
          background-color: #4CAF50;
          color: white;
        }
        .off {
          background-color: #f44336;
          color: white;
        }
        .status {
          margin-top: 10px;
          font-size: 14px;
          color: #666;
        }
        @media (max-width: 600px) {
          .grid {
            grid-template-columns: 1fr;
          }
        }
      </style>
    </head>
    <body>
      <div class="container">
        <h1>Home Control System</h1>
        
        <div class="grid">
          <div class="device">
            <h3>Light 1</h3>
            <div class="button-group">
              <a href="/light1/on"><button class="on">ON</button></a>
              <a href="/light1/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Light 2</h3>
            <div class="button-group">
              <a href="/light2/on"><button class="on">ON</button></a>
              <a href="/light2/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Light 3</h3>
            <div class="button-group">
              <a href="/light3/on"><button class="on">ON</button></a>
              <a href="/light3/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Light 4</h3>
            <div class="button-group">
              <a href="/light4/on"><button class="on">ON</button></a>
              <a href="/light4/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Plug 1</h3>
            <div class="button-group">
              <a href="/plug1/on"><button class="on">ON</button></a>
              <a href="/plug1/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Plug 2</h3>
            <div class="button-group">
              <a href="/plug2/on"><button class="on">ON</button></a>
              <a href="/plug2/off"><button class="off">OFF</button></a>
            </div>
          </div>

          <div class="device">
            <h3>Plug 3</h3>
            <div class="button-group">
              <a href="/plug3/on"><button class="on">ON</button></a>
              <a href="/plug3/off"><button class="off">OFF</button></a>
            </div>
          </div>
        </div>
      </div>
    </body>
    </html>
  )rawliteral";

  server.send(200, "text/html", html);
}

void setup() {
  Serial.begin(115200);

  // Set pin modes and initialize to OFF (HIGH)
  pinMode(LIGHT1_PIN, OUTPUT);
  pinMode(LIGHT2_PIN, OUTPUT);
  pinMode(LIGHT3_PIN, OUTPUT);
  pinMode(LIGHT4_PIN, OUTPUT);
  pinMode(PLUG1_PIN, OUTPUT);
  pinMode(PLUG2_PIN, OUTPUT);
  pinMode(PLUG3_PIN, OUTPUT);

  // Initialize all outputs to OFF (HIGH due to inverse logic)
  digitalWrite(LIGHT1_PIN, HIGH);
  digitalWrite(LIGHT2_PIN, HIGH);
  digitalWrite(LIGHT3_PIN, HIGH);
  digitalWrite(LIGHT4_PIN, HIGH);
  digitalWrite(PLUG1_PIN, HIGH);
  digitalWrite(PLUG2_PIN, HIGH);
  digitalWrite(PLUG3_PIN, HIGH);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to Wi-Fi");

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("\nWi-Fi connected!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Define server routes with inverse logic (LOW for ON, HIGH for OFF)
  server.on("/", handleRoot);

  // Light controls
  server.on("/light1/on", []() { digitalWrite(LIGHT1_PIN, LOW); handleRoot(); });
  server.on("/light1/off", []() { digitalWrite(LIGHT1_PIN, HIGH); handleRoot(); });

  server.on("/light2/on", []() { digitalWrite(LIGHT2_PIN, LOW); handleRoot(); });
  server.on("/light2/off", []() { digitalWrite(LIGHT2_PIN, HIGH); handleRoot(); });

  server.on("/light3/on", []() { digitalWrite(LIGHT3_PIN, LOW); handleRoot(); });
  server.on("/light3/off", []() { digitalWrite(LIGHT3_PIN, HIGH); handleRoot(); });

  server.on("/light4/on", []() { digitalWrite(LIGHT4_PIN, LOW); handleRoot(); });
  server.on("/light4/off", []() { digitalWrite(LIGHT4_PIN, HIGH); handleRoot(); });

  // Plug controls
  server.on("/plug1/on", []() { digitalWrite(PLUG1_PIN, LOW); handleRoot(); });
  server.on("/plug1/off", []() { digitalWrite(PLUG1_PIN, HIGH); handleRoot(); });

  server.on("/plug2/on", []() { digitalWrite(PLUG2_PIN, LOW); handleRoot(); });
  server.on("/plug2/off", []() { digitalWrite(PLUG2_PIN, HIGH); handleRoot(); });

  server.on("/plug3/on", []() { digitalWrite(PLUG3_PIN, LOW); handleRoot(); });
  server.on("/plug3/off", []() { digitalWrite(PLUG3_PIN, HIGH); handleRoot(); });

  server.begin();
  Serial.println("Server started!");
}

void loop() {
  server.handleClient();
}